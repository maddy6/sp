WITH months AS (
    -- Generate last 60 months
    SELECT ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -LEVEL + 1) AS month_start
    FROM dual
    CONNECT BY LEVEL <= 60
),
headcount AS (
    -- Headcount per sub_dept per month
    SELECT
        TRUNC(h.date, 'MM') AS month_start,
        h.sub_dept,
        COUNT(*) AS headcount
    FROM hr_db h
    GROUP BY TRUNC(h.date, 'MM'), h.sub_dept
),
voluntary_exits AS (
    -- Voluntary exits per sub_dept per month
    SELECT
        TRUNC(h.date, 'MM') AS month_start,
        h.sub_dept,
        SUM(CASE WHEN h.voluntary_flag = 1 THEN 1 ELSE 0 END) AS voluntary_exits
    FROM hr_db h
    GROUP BY TRUNC(h.date, 'MM'), h.sub_dept
),
joined AS (
    -- Join months with sub_dept data
    SELECT
        m.month_start,
        h.sub_dept,
        NVL(h.headcount, 0) AS headcount,
        NVL(v.voluntary_exits, 0) AS voluntary_exits
    FROM months m
    CROSS JOIN (SELECT DISTINCT sub_dept FROM hr_db) d
    LEFT JOIN headcount h
           ON h.month_start = m.month_start
          AND h.sub_dept = d.sub_dept
    LEFT JOIN voluntary_exits v
           ON v.month_start = m.month_start
          AND v.sub_dept = d.sub_dept
),
rolling_12m AS (
    SELECT
        j.sub_dept,
        j.month_start,
        j.headcount,
        -- Rolling 12-month voluntary exits
        SUM(j.voluntary_exits) OVER (
            PARTITION BY j.sub_dept
            ORDER BY j.month_start
            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW
        ) AS voluntary_exits_12m,
        -- Rolling 12-month average headcount
        AVG(j.headcount) OVER (
            PARTITION BY j.sub_dept
            ORDER BY j.month_start
            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW
        ) AS avg_headcount_12m
    FROM joined j
)
SELECT
    sub_dept,
    TO_CHAR(month_start, 'YYYY-MM') AS month,
    headcount AS current_month_headcount,
    voluntary_exits_12m,
    ROUND(avg_headcount_12m, 2) AS avg_headcount_12m,
    ROUND(
        CASE WHEN avg_headcount_12m > 0
             THEN voluntary_exits_12m / avg_headcount_12m
             ELSE 0 END, 4
    ) AS attrition_rate
FROM rolling_12m
ORDER BY sub_dept, month_start;
